{"version":3,"sources":["components/Loader/Loader.module.css","components/QuantityPerPage/QuantityPerPage.jsx","components/SearchBar/SearchBar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","services/pixabay-api.js","components/Button/Button.jsx","components/Modal/Modal.jsx","components/Loader/Loader.jsx","components/App.js","index.js"],"names":["module","exports","QuantityPerPage","state","value","onChangeValue","e","target","setState","prevProps","prevState","this","props","onChange","className","name","id","Component","SearchBar","query","handleChangeQuery","currentTarget","handleSubmitForm","preventDefault","onSubmitForm","onSubmit","type","autoComplete","autoFocus","placeholder","onChangeQuantity","ImageGalleryItem","previewUrl","imageUrl","onClickImage","onClick","src","alt","data-url","width","ImageGallery","galleryPhotos","onOpenModal","map","largeImageURL","webformatURL","axios","defaults","baseURL","galleryApi","API_KEY","fetchGallery","pageNumber","quantity","get","then","data","hits","result","Button","onLoadMore","modalRoot","document","querySelector","Modal","handleKeyDown","code","onCloseModal","handleBackDropClick","window","addEventListener","removeEventListener","createPortal","color","size","App","s","loaderContainer","visible","isLoading","height","timeout","gallery","page","searchQuery","showModal","modalImageUrl","toggleModal","pixabayApi","images","finally","handleLoadMoreBtn","handleOpenModal","url","dataset","onChangeQuery","scrollToNextPage","scrollTo","top","documentElement","scrollHeight","behavior","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c161c199.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"Loader_loaderContainer__19ipN\"};","import { Component } from 'react';\nimport propTypes from 'prop-types';\n\nexport default class QuantityPerPage extends Component {\n  state = {\n    value: 8,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { value } = this.state;\n\n    if (prevState.value !== value) {\n      this.props.onChange(value);\n    }\n  }\n\n  onChangeValue = e => {\n    const value = e.target.value;\n    this.setState({ value: value });\n  };\n\n  render() {\n    return (\n      <select\n        className=\"QuantitySelect\"\n        value={this.state.value}\n        name=\"quantity\"\n        id=\"quantity\"\n        onChange={e => this.onChangeValue(e)}\n      >\n        <option value=\"4\" name=\"quantity\">\n          4\n        </option>\n        <option value=\"8\" name=\"quantity\">\n          8\n        </option>\n        <option value=\"12\" name=\"quantity\">\n          12\n        </option>\n        <option value=\"20\" name=\"quantity\">\n          20\n        </option>\n      </select>\n    );\n  }\n}\n\nQuantityPerPage.propTypes = {\n  onChange: propTypes.func.isRequired,\n};\n","import { Component } from 'react';\nimport propTypes from 'prop-types';\nimport QuantityPerPage from '../QuantityPerPage/QuantityPerPage';\n\nexport default class SearchBar extends Component {\n  state = {\n    query: '',\n  };\n\n  handleChangeQuery = e => this.setState({ query: e.currentTarget.value });\n\n  handleSubmitForm = e => {\n    e.preventDefault();\n    const { query } = this.state;\n    if (!query) return;\n    this.props.onSubmitForm(query);\n    this.setState({ query: '' });\n  };\n\n  render() {\n    const { query } = this.state;\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={e => this.handleSubmitForm(e)}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            value={query}\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={e => this.handleChangeQuery(e)}\n          />\n        </form>\n        <QuantityPerPage onChange={this.props.onChangeQuantity} />\n      </header>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  onSubmitForm: propTypes.func.isRequired,\n  onChangeQuantity: propTypes.func.isRequired,\n};\n","import propTypes from 'prop-types';\n\nexport default function ImageGalleryItem({\n  previewUrl,\n  imageUrl,\n  onClickImage,\n}) {\n  return (\n    <li className=\"ImageGalleryItem\" onClick={e => onClickImage(e)}>\n      <img\n        src={previewUrl}\n        alt=\"\"\n        className=\"ImageGalleryItem-image\"\n        data-url={imageUrl}\n        width=\"150\"\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  previewUrl: propTypes.string,\n  imageUrl: propTypes.string,\n  onClickImage: propTypes.func,\n};\n","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport propTypes from 'prop-types';\n\nexport default function ImageGallery({ galleryPhotos, onOpenModal }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {galleryPhotos.map(({ id, largeImageURL, webformatURL }) => (\n        <ImageGalleryItem\n          key={id}\n          previewUrl={webformatURL}\n          imageUrl={largeImageURL}\n          onClickImage={onOpenModal}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  onOpenModal: propTypes.func,\n  galleryPhotos: propTypes.arrayOf(\n    propTypes.exact({\n      id: propTypes.number,\n      webformatURL: propTypes.string,\n      largeImageURL: propTypes.string,\n    }),\n  ),\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api';\n\nconst galleryApi = {\n  API_KEY: '13118160-85f169275baea695b5828e8ed',\n\n  async fetchGallery(query = '', pageNumber = 1, quantity = 4) {\n    return await axios\n      .get(\n        `/?q=${query}&page=${pageNumber}&key=${this.API_KEY}&image_type=photo&orientation=horizontal&per_page=${quantity}`,\n      )\n      .then(({ data }) => data.hits)\n      .then(result =>\n        result.map(({ id, largeImageURL, webformatURL }) => ({\n          id,\n          largeImageURL,\n          webformatURL,\n        })),\n      );\n  },\n};\n\nexport default galleryApi;\n","import propTypes from 'prop-types';\n\nexport default function Button({ onLoadMore }) {\n  return (\n    <button className=\"Button\" type=\"button\" onClick={() => onLoadMore()}>\n      load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onLoadMore: propTypes.func,\n};\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onCloseModal();\n    }\n  };\n\n  handleBackDropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onCloseModal();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={e => this.handleBackDropClick(e)}>\n        <div className=\"Modal\">\n          <div\n            className=\"ModalButtonWrapper\"\n            onClick={() => this.props.onCloseModal()}\n          >\n            <AiOutlineCloseCircle color=\"white\" size=\"25px\" />\n          </div>\n          <img src={this.props.imageUrl} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import Loader from 'react-loader-spinner';\nimport { Component } from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './Loader.module.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className={s.loaderContainer}>\n        <Loader\n          visible={this.props.isLoading}\n          type=\"BallTriangle\"\n          color=\"#00BFFF\"\n          height={50}\n          width={50}\n          timeout={0}\n        />\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\n\nimport SearchBar from './SearchBar/SearchBar';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport pixabayApi from '../services/pixabay-api';\nimport Button from './Button/Button';\nimport Modal from './Modal/Modal';\nimport Loader from './Loader/Loader';\n\nexport default class App extends Component {\n  state = {\n    gallery: [],\n    page: 1,\n    searchQuery: '',\n    showModal: false,\n    modalImageUrl: '',\n    isLoading: false,\n    quantity: 8,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { page, searchQuery, quantity } = this.state;\n\n    if (prevState.searchQuery !== searchQuery) {\n      this.fetchGallery();\n    }\n\n    if (prevState.page !== page) {\n      this.scrollToNextPage();\n    }\n\n    if (prevState.quantity !== quantity && searchQuery) {\n      this.fetchGallery();\n    }\n  }\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  fetchGallery = () => {\n    const { page, searchQuery, quantity } = this.state;\n\n    this.setState({ isLoading: true });\n\n    pixabayApi\n      .fetchGallery(searchQuery, page, quantity)\n      .then(images => {\n        this.setState(({ gallery, page }) => ({\n          gallery: [...gallery, ...images],\n          page: page + 1,\n        }));\n      })\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  handleLoadMoreBtn = () => {\n    this.fetchGallery();\n\n    this.setState(({ page }) => ({\n      page: page + 1,\n    }));\n  };\n\n  handleOpenModal = e => {\n    const url = e.target.dataset.url;\n\n    this.toggleModal();\n    this.setState({ modalImageUrl: url });\n  };\n\n  onChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      gallery: [],\n      page: 1,\n    });\n  };\n\n  onChangeQuantity = value => this.setState({ quantity: value });\n\n  scrollToNextPage = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  render() {\n    const { gallery, showModal, modalImageUrl, isLoading } = this.state;\n\n    return (\n      <>\n        <SearchBar\n          onSubmitForm={this.onChangeQuery}\n          onChangeQuantity={this.onChangeQuantity}\n        />\n        <main>\n          <ImageGallery\n            galleryPhotos={gallery}\n            onOpenModal={this.handleOpenModal}\n          />\n          <Loader isLoading={isLoading} />\n\n          {gallery.length > 0 && !isLoading && (\n            <Button onLoadMore={this.fetchGallery} />\n          )}\n\n          {showModal && (\n            <Modal imageUrl={modalImageUrl} onCloseModal={this.toggleModal} />\n          )}\n        </main>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/styles.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}